<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" creationComplete="init();">
  <mx:Script>
    <![CDATA[
      import com.test.MyOtherClass;
      import mx.containers.Tile;
      import com.google.code.actionscriptnativebridge.event.ResultEvent;
      import com.google.code.actionscriptnativebridge.NativeBridge;
      import com.google.code.actionscriptnativebridge.callback.ResultCallback;
      import com.google.code.actionscriptnativebridge.callback.FaultCallback;
      import com.google.code.actionscriptnativebridge.event.FaultEvent;
      import com.google.code.actionscriptnativebridge.event.NativeRequestEvent;
      
      import mx.logging.LogEventLevel;
      import mx.logging.LogEvent;
      import mx.logging.targets.TraceTarget;
      import mx.logging.ILoggingTarget;
      import mx.logging.Log;
      import mx.utils.ObjectUtil;

      private function init():void
      {
        var traceTarget:TraceTarget = new TraceTarget();
        traceTarget.includeCategory = true;
        traceTarget.includeDate = true;
        traceTarget.includeLevel = true;
        traceTarget.includeTime = true;
        traceTarget.fieldSeparator = " | ";
        traceTarget.level = LogEventLevel.ALL;
        Log.addTarget(traceTarget);
        
        new MyOtherClass().processa(1, "pcmnac++");
        
        NativeBridge.instance.addFunctionHandler(
          "soma",
          function(a:int, b:int):int
          {
            return a + b;
          }
        );
        
        NativeBridge.instance.addAsynchronousHandler(
          "multiplica",
          function(a:int, b:int, e:NativeRequestEvent):void
          {
            e.resultData = a * b + 1;
            e.sendResponse();
          }
        );
        
        
        NativeBridge.instance.processa(1, "pcmnac");
        
        NativeBridge.instance.multiplica(
          3, 2, 
          new ResultCallback(
            function(a:int):void
            {
              trace("Resultado: " + a);
            }
          ), 
          new FaultCallback(
            function(fe:FaultEvent):void
            {
              trace(fe.status);
              trace(ObjectUtil.toString(fe.data));
            }
          )
        );
      
      
      NativeBridge.instance.sum(
          3, 2, 
          new ResultCallback(
            function(re:ResultEvent):void
            {
              trace(re.data);
            }
          ), 
          new FaultCallback(
            function(fe:FaultEvent):void
            {
              trace(fe.status);
              trace(ObjectUtil.toString(fe.data));
            }
          )
        );
      }
      
    ]]>
  </mx:Script>
</mx:WindowedApplication>
