<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" creationComplete="init();">
  <mx:Script>
    <![CDATA[
      import com.test.MyOtherClass;
      import mx.containers.Tile;
      import com.google.code.actionscriptnativebridge.event.ResultEvent;
      import com.google.code.actionscriptnativebridge.NativeBridge;
      import com.google.code.actionscriptnativebridge.callback.ResultCallback;
      import com.google.code.actionscriptnativebridge.callback.FaultCallback;
      import com.google.code.actionscriptnativebridge.event.FaultEvent;
      import com.google.code.actionscriptnativebridge.event.NativeRequestEvent;
      
      import mx.logging.LogEventLevel;
      import mx.logging.LogEvent;
      import mx.logging.targets.TraceTarget;
      import mx.logging.ILoggingTarget;
      import mx.logging.Log;
      import mx.utils.ObjectUtil;

      private function init():void
      {
        var traceTarget:TraceTarget = new TraceTarget();
        traceTarget.includeCategory = true;
        traceTarget.includeDate = true;
        traceTarget.includeLevel = true;
        traceTarget.includeTime = true;
        traceTarget.fieldSeparator = " | ";
        traceTarget.level = LogEventLevel.ALL;
        Log.addTarget(traceTarget);
        
        __testNativeCallThroughBridgeFacade();
        __testNativeCallThroughProxyObject();
        __testSynchronousHandler();
        __testAsynchronousHandler();
        
        
        NativeBridge.instance.addHandler(
          "newMessage",
          function(message:String):void
          {
            txa.text = ">>> " + message + "\n" + txa.text;
          }
        );
        
      }
      
      private function __testNativeCallThroughBridgeFacade():void
      {
        // Test with Result and Fault callbacks;
        NativeBridge.instance.sum(
          3, 2, 
          new ResultCallback(
            function(result:int):void
            {
              trace("sum(3, 2) => " + result);
            }
          ), 
          new FaultCallback(
            function(error:Object):void
            {
              trace(ObjectUtil.toString(error));
            }
          )
        );
        
        // Test with Result callback;
        NativeBridge.instance.multiply( // using alias to method name
          3, 2, 
          new ResultCallback(
            function(result:int):void
            {
              trace("multiply(3, 2) => " + result);
            }
          )
        );
        
        // Test with Fault callback;
        NativeBridge.instance.sum(
          3, 2, 
          new FaultCallback(
            function(error:Object):void
            {
              trace(ObjectUtil.toString(error));
            }
          )
        );
        
        // Test without any callback;
        NativeBridge.instance.process(3, "My String - áéíóúç");
      }
      
      private function __testNativeCallThroughProxyObject():void
      {
        // Test with Result and Fault callbacks;
        new MyOtherClass().process(1, "pcmnac++");
      }
      
      private function __testSynchronousHandler():void
      {
        NativeBridge.instance.addHandler(
          "sum",
          function(a:int, b:int):int
          {
            return a + b;
          }
        );
      }
      
      private function __testAsynchronousHandler():void
      {
        NativeBridge.instance.addAsynchronousHandler(
          "mult",
          function(a:int, b:int, e:NativeRequestEvent):void
          {
            e.resultData = a * b;
            e.sendResponse();
          }
        );
      }
      
      
    ]]>
  </mx:Script>
  
  <mx:TextArea id="txa" width="100%" height="100%" />
  <mx:TextInput id="txt" />
  <mx:Button label="Send" click="NativeBridge.instance.showMessage(txt.text); txa.text='&lt;&lt;&lt; ' + txt.text + '\n' + txa.text; txt.text='';" />
  
</mx:WindowedApplication>
